// Mocks generated by Mockito 5.3.2 from annotations
// in flutter_test_widget_integration_unit/test/data/repositories/album_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_test_widget_integration_unit/data/datasources/album_remote_data_source.dart'
    as _i3;
import 'package:flutter_test_widget_integration_unit/data/models/album.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAlbum_0 extends _i1.SmartFake implements _i2.Album {
  _FakeAlbum_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AlbumRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAlbumRemoteDataSource extends _i1.Mock
    implements _i3.AlbumRemoteDataSource {
  MockAlbumRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.Album>> fetchAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: _i4.Future<List<_i2.Album>>.value(<_i2.Album>[]),
      ) as _i4.Future<List<_i2.Album>>);
  @override
  _i4.Future<_i2.Album> fetchById(int? albumId) => (super.noSuchMethod(
        Invocation.method(
          #getById,
          [albumId],
        ),
        returnValue: _i4.Future<_i2.Album>.value(_FakeAlbum_0(
          this,
          Invocation.method(
            #getById,
            [albumId],
          ),
        )),
      ) as _i4.Future<_i2.Album>);
  @override
  _i4.Future<void> create(_i2.Album? album) => (super.noSuchMethod(
        Invocation.method(
          #create,
          [album],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
